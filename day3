#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//指针大小在32位平台上是4个字节，64位平台上是8个字节
int main()
{
	double a=3.14;
	double* b = &a;//取a的地址
	*b = 5.5;
	printf("%lf\n",a);//5.500000
	printf("%lf\n", *b);//5.500000
	printf("%d\n", sizeof(b));//8
	return 0;
}


#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//创建一个结构体类型
struct book
{
	char name[20];//书名C语言
	short price;//价格55
};
int main()
{
	struct book b1 = { "C语言",55};
	printf("书名：%s\n", b1.name);//书名：C语言
	printf("价格：%d\n", b1.price);//价格：55
	b1.price = 15;
	printf("修改后的价格：%d\n", b1.price);//修改后的价格：15
	return 0;
}


#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//创建一个结构体类型，利用指针
struct book
{
	char name[20];//书名C语言
	short price;//价格55
};
int main()
{
	struct book b1 = { "C语言",55};
	printf("书名：%s\n", b1.name);
	printf("价格：%d\n", b1.price);
	struct book* pb = &b1;//取地址
	printf("书名：%s\n",(*pb).name);
	printf("价格：%d\n", (*pb).price);
	printf("书名：%s\n", pb->name);//等价于printf("书名：%s\n",(*pb).name);
	printf("价格：%d\n", pb->price);//等价于printf("价格：%d\n", (*pb).price)
	return 0;
}
//. 结构体变量.成员
//-> 结构体指针->成员


#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <string.h>
//改书名
struct book
{
	char name[20];//书名C语言
	short price;//价格55
};
int main()
{
	struct book b1 = { "C语言",55};
	printf("书名：%s\n", b1.name);//书名：C语言
	printf("价格：%d\n", b1.price);//价格：55
	b1.price = 15;//改价格
	printf("修改后的价格：%d\n", b1.price);//修改后的价格：15
	strcpy(b1.name, "C++");//改书名，strcpy—string copy字符串拷贝—库函数-string.h
	printf("修改后的书名：%s\n", b1.name);//修改后的书名：C++
	return 0;
}
